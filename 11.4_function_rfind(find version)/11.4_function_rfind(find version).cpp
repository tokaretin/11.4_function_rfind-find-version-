#include <iostream>
#include <string>

/* Поиск подстроки в обратном порядке */

int rfind(std::string str, std::string substr) {
    for (int i = str.length() - substr.length(); i >= 0; --i) {
        bool equal = true;
        for (int j = 0; j < substr.length(); ++j) {
            if (str[i + j] != substr[j]) {
                equal = false;
            }
        }
        if (equal)
            return i;
    }
    return -1;
}

int main() {
    std::string word;
    std::string text;
    std::cin >> text;
    std::cin >> word;

    std::cout << "Rfind:" << rfind(text, word) << std::endl;
}

/*Этот код на языке C++ определяет функцию rfind, которая выполняет обратный поиск подстроки substr в строке str. 
Функция возвращает индекс последнего вхождения подстроки в строку или -1, если подстрока не найдена.

Функция использует два вложенных цикла. Внешний цикл проходит по индексам строки str в обратном порядке, 
начиная с индекса str.length() - substr.length() и заканчивая индексом 0. Это сделано для того, 
чтобы начать поиск с последних символов строки.

Внутренний цикл проходит по символам подстроки substr и сравнивает каждый символ с соответствующим 
символом в строке str, начиная с текущего индекса i. Если хотя бы один символ не совпадает, то флаг 
equal устанавливается в false.

Если внутренний цикл закончился и все символы подстроки были сравнены и совпали, то флаг equal останется 
равным true, и функция возвращает текущий индекс i, т.е. индекс последнего символа подстроки в строке.

Если подстрока не была найдена, то функция возвращает -1.

Функция rfind используется в функции main, которая считывает две строки text и word с помощью std::cin 
и выводит индекс последнего вхождения подстроки word в строку text, используя функцию rfind. Результат 
выводится на экран с помощью std::cout и символа новой строки std::endl.*/